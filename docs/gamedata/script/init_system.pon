#==================================================================
# Ponkanの初期設定
#==================================================================

# 存在しないコマンドはエラーにする
;raiseerror unknowncommand: true

#=============================================
# 設定
#=============================================
---
//============================================
// 使用するレイヤーの設定
//============================================

// レイヤーの総数
tv.layerCount = 40;

// 各画面で使用するレイヤーの指定
tv.layer = {
  // メッセージレイヤ
  message: 20,
  // 行末グリフ
  line: 21,
  // ページ末グリフ
  page: 22,
  // オートモード状態表示
  auto: 23,
  // メニューのボタン
  menubutton: 25,
};
---

#=============================================
# 音声バッファのエイリアス設定
#=============================================
;bufalias name: "bgm", buf: 0
;bufalias name: "system", buf: 1
;bufalias name: "se", buf: 2


#=============================================
# レイヤーの設定
#=============================================
# レイヤーの数
;laycount count: "&tv.layerCount"


#=============================================
# メッセージレイヤーの設定
#=============================================
;messagelay "lay": "&tv.layer.message"
;layopt {
  lay: "message",
  x: 240,
  y: 490,
  width: 800,
  height: 200,
  visible: false
};
;messageopt {
  lay: "message",
  fontfamily: ["GenShinGothic", "monospace"],
  fontsize: 26,
  weight: "normal",
  color: "0xFFFFFF",
  pitch: 0,
  lineheight: 26,
  linepitch: 10,
  align: "left",
  shadow: true,
  shadowalpha: 0.7,
  shadowangle: 0.5,
  shadowblur: 5,
  shadowcolor: "0x000000",
  shadowdistance: 2,
  edgewidth: 2,
  edgecolor: "0x000000",
  autoreturn: true,
  margint: 20,
  marginr: 20,
  marginb: 20,
  marginl: 20
};
;image lay: "mes", file: "image/message.png"
#;fillcolor lay: "message", color: 0x000000, alpha: 0.75
;clear lay: "all"


#=============================================
# 行末グリフの設定
#=============================================
---
let frames = tv.lineBreakFrames = [];
for (var i = 0; i < 16; i++) { frames.push({x: 24 * i, y: 0}); }
for (var i = 1; i < 15; i++) { frames.push({x: 360 - 24 * i, y: 0}); }
---
;lbglyph lay: "&tv.layer.line", pos: "eol"
;image {
  lay: "linebreak",
  file: "sysimage/linebreak.png"
};
;frameanim {
  lay: "linebreak",
  loop: true,
  time: 50,
  width: 24,
  height: 24,
  frames: "&tv.lineBreakFrames"
};


#=============================================
# ページ末グリフの設定
#=============================================
---
let frames = tv.pageBreakFrames = [];
for (var i = 0; i < 16; i++) { frames.push({"x": 24 * i, "y": 0}); }
for (var i = 1; i < 15; i++) { frames.push({"x": 360 - 24 * i, "y": 0}); }
---
;pbglyph lay: "&tv.layer.page", pos: "eol"
;image {
  lay: "pagebreak",
  file: "sysimage/pagebreak.png"
};
;frameanim {
  lay: "pagebreak",
  loop: true,
  time: 50,
  width: 24,
  height: 24,
  frames: "&tv.pageBreakFrames"
};


#=============================================
# オートモード表示レイヤの設定
#=============================================
;automodeopt lay: "&tv.layer.auto"
;layopt {
  lay: "automode",
  x: 10,
  y: 10,
  visible: false
};
;image lay: "automode", file: "sysimage/automode.png"


#=============================================
# システムボタン
#=============================================
;call "file": "sysbtn/sysbtn.pon"


#=============================================
# マクロ定義
#=============================================
;call "file": "script/macro.pon"

;return
